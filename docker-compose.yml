version: "2.4"

networks:
  server1:
  server2:
  server3:
  common:

services:
  supervisor_1: &supervisor
    extends:
      file: docker-compose-common-components.yml
      service: python
    command: supervisor
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      common:
      server1:
        aliases:
          - supervisor
    volumes:
      - ./supervisor_data:/data
  backend_1: &backend
    hostname: api
    extends:
      file: docker-compose-common-components.yml
      service: python
    command: web
    depends_on:
      - postgres
      - redis
    networks:
      server1:
        aliases:
          - backend
      common:
  frontend_1: &frontend
    image: ${FRONTEND_DOCKER_REPOSITORY}:${TAGGED_VERSION}
    ports:
      - ${RCONWEB_PORT}:80
      - ${RCONWEB_PORT_HTTPS}:443
      - ${PUBLIC_STATS_PORT}:81
      - ${PUBLIC_STATS_PORT_HTTPS}:444
    restart: always
    environment:
      RCONWEB_EXTERNAL_ADDRESS: ${RCONWEB_EXTERNAL_ADDRESS}
      HLL_HOST: ${HLL_HOST}
    volumes:
      - ./static:/static/
      - ./certs:/certs/
    depends_on:
      - backend_1
    networks:
      - server1
      - common
  redis:
    image: redis:alpine
    restart: always
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 15s
      timeout: 30s
      retries: 5
    volumes:
      - ./redis_data:/data
      - ./config:/usr/local/etc/redis
    networks:
      - common
  postgres:
    image: postgres:12-alpine
    restart: always
    environment:
      # If a password is not defined this container will fail to create
      POSTGRES_PASSWORD: ${HLL_DB_PASSWORD}
      POSTGRES_USER: ${HLL_DB_USER}
      POSTGRES_DB: ${HLL_DB_NAME}
      PGDATA: /data
      HLL_DB_NAME: ${HLL_DB_NAME}
      HLL_DB_USER: ${HLL_DB_USER}
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "${HLL_DB_USER}", "-d", "${HLL_DB_NAME}"]
      interval: 15s
      timeout: 30s
      retries: 5
      start_period: 80s
    volumes:
      - ./db_data:/data
    networks:
      - common

  ########### SERVER 2  #############
  supervisor_2:
    <<: *supervisor
    environment: &env2
      HLL_HOST: ${HLL_HOST_2}
      HLL_PORT: ${HLL_PORT_2}
      HLL_PASSWORD: ${HLL_PASSWORD_2}
      LOGGING_LEVEL: "INFO"
      LOGGING_PATH: /logs/
      HLL_REDIS_HOST: ${HLL_REDIS_HOST}
      HLL_REDIS_PORT: ${HLL_REDIS_HOST_PORT}
      HLL_REDIS_DB: 1
      HLL_REDIS_URL: redis://${HLL_REDIS_HOST}:${HLL_REDIS_HOST_PORT}/1
      HLL_DB_USER: ${HLL_DB_USER}
      HLL_DB_PASSWORD: ${HLL_DB_PASSWORD}
      HLL_DB_NAME: ${HLL_DB_NAME}
      HLL_DB_HOST: ${HLL_DB_HOST}
      HLL_DB_HOST_PORT: ${HLL_DB_HOST_PORT}
      HLL_DB_URL: postgresql://${HLL_DB_USER}:${HLL_DB_PASSWORD}@${HLL_DB_HOST}:${HLL_DB_HOST_PORT}/${HLL_DB_NAME}
      RCONWEB_API_SECRET: ${RCONWEB_API_SECRET}
      RCONWEB_PORT: ${RCONWEB_PORT_2}
      SUPERVISOR_RPC_URL: http://supervisor:9001/RPC2
      CONFIG_DIR: /config/
      SERVER_NUMBER: 2
      PUBLIC_STATS_PORT: ${PUBLIC_STATS_PORT_2}
      PUBLIC_STATS_PORT_HTTPS: ${PUBLIC_STATS_PORT_HTTPS_2}
      GTX_SERVER_NAME_CHANGE_USERNAME: ${GTX_SERVER_NAME_CHANGE_USERNAME_2}
      GTX_SERVER_NAME_CHANGE_PASSWORD: ${GTX_SERVER_NAME_CHANGE_PASSWORD_2}
      SENTRY_DSN: ${SENTRY_DSN_2}
    restart: on-failure
    networks:
      common:
      server2:
        aliases:
          - supervisor
    command: supervisor
    depends_on:
      - frontend_1
  backend_2:
    <<: *backend
    hostname: api_2
    environment:
      <<: *env2
    restart: on-failure
    networks:
      common:
      server2:
        aliases:
          - backend
    depends_on:
      - frontend_1
  frontend_2:
    <<: *frontend
    ports:
      - ${RCONWEB_PORT_2}:80
      - ${RCONWEB_PORT_HTTPS_2}:443
      - ${PUBLIC_STATS_PORT_2}:81
      - ${PUBLIC_STATS_PORT_HTTPS_2}:444
    environment:
      <<: *env2
    restart: on-failure
    networks:
      - common
      - server2
    depends_on:
      - backend_2

  ############ SERVER 3  #############
  supervisor_3:
    <<: *supervisor
    environment: &env3
      HLL_HOST: ${HLL_HOST_3}
      HLL_PORT: ${HLL_PORT_3}
      HLL_PASSWORD: ${HLL_PASSWORD_3}
      LOGGING_LEVEL: "INFO"
      LOGGING_PATH: /logs/
      HLL_REDIS_HOST: ${HLL_REDIS_HOST}
      HLL_REDIS_PORT: ${HLL_REDIS_HOST_PORT}
      HLL_REDIS_DB: 2
      HLL_REDIS_URL: redis://${HLL_REDIS_HOST}:${HLL_REDIS_HOST_PORT}/2
      HLL_DB_USER: ${HLL_DB_USER}
      HLL_DB_PASSWORD: ${HLL_DB_PASSWORD}
      HLL_DB_NAME: ${HLL_DB_NAME}
      HLL_DB_HOST: ${HLL_DB_HOST}
      HLL_DB_HOST_PORT: ${HLL_DB_HOST_PORT}
      HLL_DB_URL: postgresql://${HLL_DB_USER}:${HLL_DB_PASSWORD}@${HLL_DB_HOST}:${HLL_DB_HOST_PORT}/${HLL_DB_NAME}
      RCONWEB_API_SECRET: ${RCONWEB_API_SECRET}
      RCONWEB_PORT: ${RCONWEB_PORT_3}
      SUPERVISOR_RPC_URL: http://supervisor:9001/RPC2
      CONFIG_DIR: /config/
      SERVER_NUMBER: 3
      PUBLIC_STATS_PORT: ${PUBLIC_STATS_PORT_3}
      PUBLIC_STATS_PORT_HTTPS: ${PUBLIC_STATS_PORT_HTTPS_3}
      GTX_SERVER_NAME_CHANGE_USERNAME: ${GTX_SERVER_NAME_CHANGE_USERNAME_3}
      GTX_SERVER_NAME_CHANGE_PASSWORD: ${GTX_SERVER_NAME_CHANGE_PASSWORD_3}
      SENTRY_DSN: ${SENTRY_DSN_3}
    restart: on-failure
    command: supervisor
    networks:
      common:
      server3:
        aliases:
          - supervisor
    depends_on:
      - frontend_2
  backend_3:
    <<: *backend
    hostname: api_3
    environment:
      <<: *env3
    restart: on-failure
    networks:
      common:
      server3:
        aliases:
          - backend
    depends_on:
      - frontend_2
  frontend_3:
    <<: *frontend
    ports:
      - ${RCONWEB_PORT_3}:80
      - ${RCONWEB_PORT_HTTPS_3}:443
      - ${PUBLIC_STATS_PORT_3}:81
      - ${PUBLIC_STATS_PORT_HTTPS_3}:444
    environment:
      <<: *env3
    restart: on-failure
    networks:
      - common
      - server3
    depends_on:
      - backend_3
