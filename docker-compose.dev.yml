networks:
  common:

services:
  supervisor_1:
    build: .
    environment:
      LOGGING_LEVEL: "DEBUG"
  backend_1:
    environment:
      LOGGING_LEVEL: "DEBUG"
    build: .
  frontend_1:
    build:
      context: .
      dockerfile: Dockerfile-frontend
  redis:
    image: ${REDIS_IMAGE}
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 15s
      timeout: 30s
      retries: 5
    volumes:
      - ./redis_data:/data
      - ./config:/usr/local/etc/redis
    networks:
      - common
    ports:
      - 127.0.0.1:${HLL_REDIS_HOST_PORT:-6379}:6379
  postgres:
    image: ${POSTGRES_IMAGE}
    environment:
      # If a password is not defined this container will fail to create
      POSTGRES_PASSWORD: ${HLL_DB_PASSWORD}
      POSTGRES_USER: ${HLL_DB_USER}
      POSTGRES_DB: ${HLL_DB_NAME}
      PGDATA: /data
      HLL_DB_NAME: ${HLL_DB_NAME}
      HLL_DB_USER: ${HLL_DB_USER}
    restart: always
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "${HLL_DB_USER}", "-d", "${HLL_DB_NAME}"]
      interval: 15s
      timeout: 30s
      retries: 5
      start_period: 80s
    volumes:
      - ./db_data:/data
    networks:
      - common
    ports:
      - 127.0.0.1:${HLL_DB_HOST_PORT:-5433}:5432
